{
  "version": 3,
  "sources": ["../three/examples/jsm/math/Lut.js"],
  "sourcesContent": ["import {\n\tColor\n} from 'three';\n\nclass Lut {\n\n \tconstructor( colormap, count = 32 ) {\n\n\t\tthis.lut = [];\n\t\tthis.map = [];\n\t\tthis.n = 0;\n\t\tthis.minV = 0;\n\t\tthis.maxV = 1;\n\n\t\tthis.setColorMap( colormap, count );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value.isLut === true ) {\n\n\t\t\tthis.copy( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetMin( min ) {\n\n\t\tthis.minV = min;\n\n\t\treturn this;\n\n\t}\n\n\tsetMax( max ) {\n\n\t\tthis.maxV = max;\n\n\t\treturn this;\n\n\t}\n\n\tsetColorMap( colormap, count = 32 ) {\n\n\t\tthis.map = ColorMapKeywords[ colormap ] || ColorMapKeywords.rainbow;\n\t\tthis.n = count;\n\n\t\tconst step = 1.0 / this.n;\n\n\t\tthis.lut.length = 0;\n\n\t\tfor ( let i = 0; i <= 1; i += step ) {\n\n\t\t\tfor ( let j = 0; j < this.map.length - 1; j ++ ) {\n\n\t\t\t\tif ( i >= this.map[ j ][ 0 ] && i < this.map[ j + 1 ][ 0 ] ) {\n\n\t\t\t\t\tconst min = this.map[ j ][ 0 ];\n\t\t\t\t\tconst max = this.map[ j + 1 ][ 0 ];\n\n\t\t\t\t\tconst minColor = new Color( this.map[ j ][ 1 ] );\n\t\t\t\t\tconst maxColor = new Color( this.map[ j + 1 ][ 1 ] );\n\n\t\t\t\t\tconst color = minColor.lerp( maxColor, ( i - min ) / ( max - min ) );\n\n\t\t\t\t\tthis.lut.push( color );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopy( lut ) {\n\n\t\tthis.lut = lut.lut;\n\t\tthis.map = lut.map;\n\t\tthis.n = lut.n;\n\t\tthis.minV = lut.minV;\n\t\tthis.maxV = lut.maxV;\n\n\t\treturn this;\n\n\t}\n\n\tgetColor( alpha ) {\n\n\t\tif ( alpha <= this.minV ) {\n\n\t\t\talpha = this.minV;\n\n\t\t} else if ( alpha >= this.maxV ) {\n\n\t\t\talpha = this.maxV;\n\n\t\t}\n\n\t\talpha = ( alpha - this.minV ) / ( this.maxV - this.minV );\n\n\t\tlet colorPosition = Math.round( alpha * this.n );\n\t\tcolorPosition == this.n ? colorPosition -= 1 : colorPosition;\n\n\t\treturn this.lut[ colorPosition ];\n\n\t}\n\n\taddColorMap( name, arrayOfColors ) {\n\n\t\tColorMapKeywords[ name ] = arrayOfColors;\n\n\t\treturn this;\n\n\t}\n\n\tcreateCanvas() {\n\n\t\tconst canvas = document.createElement( 'canvas' );\n\t\tcanvas.width = 1;\n\t\tcanvas.height = this.n;\n\n\t\tthis.updateCanvas( canvas );\n\n\t\treturn canvas;\n\n\t}\n\n\tupdateCanvas( canvas ) {\n\n\t\tconst ctx = canvas.getContext( '2d', { alpha: false } );\n\n\t\tconst imageData = ctx.getImageData( 0, 0, 1, this.n );\n\n\t\tconst data = imageData.data;\n\n\t\tlet k = 0;\n\n\t\tconst step = 1.0 / this.n;\n\n\t\tfor ( let i = 1; i >= 0; i -= step ) {\n\n\t\t\tfor ( let j = this.map.length - 1; j >= 0; j -- ) {\n\n\t\t\t\tif ( i < this.map[ j ][ 0 ] && i >= this.map[ j - 1 ][ 0 ] ) {\n\n\t\t\t\t\tconst min = this.map[ j - 1 ][ 0 ];\n\t\t\t\t\tconst max = this.map[ j ][ 0 ];\n\n\t\t\t\t\tconst minColor = new Color( this.map[ j - 1 ][ 1 ] );\n\t\t\t\t\tconst maxColor = new Color( this.map[ j ][ 1 ] );\n\n\t\t\t\t\tconst color = minColor.lerp( maxColor, ( i - min ) / ( max - min ) );\n\n\t\t\t\t\tdata[ k * 4 ] = Math.round( color.r * 255 );\n\t\t\t\t\tdata[ k * 4 + 1 ] = Math.round( color.g * 255 );\n\t\t\t\t\tdata[ k * 4 + 2 ] = Math.round( color.b * 255 );\n\t\t\t\t\tdata[ k * 4 + 3 ] = 255;\n\n\t\t\t\t\tk += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tctx.putImageData( imageData, 0, 0 );\n\n\t\treturn canvas;\n\n\t}\n\n}\n\nLut.prototype.isLut = true;\n\nconst ColorMapKeywords = {\n\n\t'rainbow': [[ 0.0, 0x0000FF ], [ 0.2, 0x00FFFF ], [ 0.5, 0x00FF00 ], [ 0.8, 0xFFFF00 ], [ 1.0, 0xFF0000 ]],\n\t'cooltowarm': [[ 0.0, 0x3C4EC2 ], [ 0.2, 0x9BBCFF ], [ 0.5, 0xDCDCDC ], [ 0.8, 0xF6A385 ], [ 1.0, 0xB40426 ]],\n\t'blackbody': [[ 0.0, 0x000000 ], [ 0.2, 0x780000 ], [ 0.5, 0xE63200 ], [ 0.8, 0xFFFF00 ], [ 1.0, 0xFFFFFF ]],\n\t'grayscale': [[ 0.0, 0x000000 ], [ 0.2, 0x404040 ], [ 0.5, 0x7F7F80 ], [ 0.8, 0xBFBFBF ], [ 1.0, 0xFFFFFF ]]\n\n};\n\nexport { Lut, ColorMapKeywords };\n"],
  "mappings": "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",
  "names": []
}
